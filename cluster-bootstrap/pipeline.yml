---
s3_env: &s3_env
  bucket: concourse
  endpoint: ((s3.endpoint))
  access_key_id: ((s3.access_key))
  secret_access_key: ((s3.secret_key))

k8s_env: &k8s_env
  cluster_url: ((cluster_url))
  cluster_ca: ((cluster_ca))
  admin_key: ((admin_key))
  admin_cert: ((admin_cert))

resource_types:
  - name: helm-release
    type: docker-image
    source:
      repository: spiegela/concourse-helm3
      tag: latest

  - name: kubernetes-object
    type: docker-image
    source:
      repository: spiegela/concourse-kubernetes
      tag: latest

resources:
  - name: pipelines
    type: git
    source:
      uri: git@github.com:spiegela/spieg-pipelines.git
      branch: master
      private_key: ((private_key))

  - name: config
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/config
      <<: *s3_env

  - name: calico
    type: kubernetes-object
    source:
      tracing_enabled: true
      namespae: kube-system
      url: https://docs.projectcalico.org/manifests/calico.yaml
      <<: *k8s_env

  - name: powerflex-system-namespace
    type: kubernetes-object
    source:
      objects:
        - name: powerflex-system
          kind: Namespace
      <<: *k8s_env

  - name: metrics-server
    type: kubernetes-object
    source:
      namespace: kube-system
      url: https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml
      <<: *k8s_env

  - name: metallb-system-namespace
    type: kubernetes-object
    source:
      url: https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
      <<: *k8s_env

  - name: metallb-configmap-template
    type: s3
    source:
      namespace: metallb-system
      versioned_file: ClusterAPI/((cluster_name))/metallb-configmap.yaml
      <<: *s3_env

  - name: memberlist-secret
    type: kubernetes-object
    source:
      namespace: metallb-system
      objects:
        - name: memberlist
          kind: Secret
      <<: *k8s_env

  - name: metallb-configmap
    type: kubernetes-object
    source:
      namespace: metallb-system
      tracing_enabled: true
      objects:
        - name: metallb-config
          kind: ConfigMap
      <<: *k8s_env

  - name: metallb
    type: kubernetes-object
    source:
      namespace: metallb-system
      url: https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
      <<: *k8s_env

  - name: powerflex-secret-template
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/powerflex-secret.yaml
      <<: *s3_env

  - name: powerflex-secret
    type: kubernetes-object
    source:
      namespace: powerflex-system
      objects:
        - name: csi-creds
          kind: Secret
      <<: *k8s_env

  - name: registry-secret-template
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/registry-secret.yaml
      <<: *s3_env

  - name: powerflex-registry-secret
    type: kubernetes-object
    source:
      objects:
        - name: registry-secret
          kind: Secret
      namespace: powerflex-system
      <<: *k8s_env

  - name: powerflex-sdc-init-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/powerflex-sdc-init-values.yaml
      <<: *s3_env

  - name: powerflex-sdc-init-repo
    type: git
    source:
      uri: git@github.com:spiegela/powerflex-sdc-init.git
      branch: master
      private_key: ((private_key))

  - name: csi-powerflex-repo
    type: git
    source:
      uri: git@github.com:spiegela/csi-powerflex.git
      branch: ((csi_branch))
      private_key: ((private_key))

  - name: csi-powerflex-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/csi-powerflex-values.yaml
      <<: *s3_env

  - name: powerflex-sdc-init-release
    type: helm-release
    source:
      release: sdc-init
      namespace: powerflex-system
      <<: *k8s_env

  - name: csi-snapshotclass-crd
    type: kubernetes-object
    source:
      url: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml

  - name: csi-snapshotcontent-crd
    type: kubernetes-object
    source:
      url: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml
      <<: *k8s_env

  - name: csi-snapshot-crd
    type: kubernetes-object
    source:
      url: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml
      <<: *k8s_env

  - name: csi-powerflex-release
    type: helm-release
    source:
      release: csi
      namespace: powerflex-system
      <<: *k8s_env

  - name: traefik-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/traefik-values.yaml
      <<: *s3_env

  - name: traefik-release
    type: helm-release
    source:
      release: traefik
      namespace: traefik-system
      <<: *k8s_env

  - name: cert-manager-release
    type: helm-release
    source:
      release: cert-manager
      namespace: cert-manager-system
      repos:
        - name: jetstack
          url: https://charts.jetstack.io
      <<: *k8s_env

  - name: node-list
    type: kubernetes-object
    source:
      tracing_enabled: true
      list: nodes
      <<: *k8s_env

  - name: cert-manager-crds
    type: kubernetes-object
    source:
      namespace: cert-manager
      url: https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.crds.yaml
      <<: *k8s_env

  - name: letsencrypt-issuers-template
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/letsencrypt-issuers.yaml
      <<: *s3_env

  - name: letsencrypt-issuers
    type: kubernetes-object
    source:
      namespace: cert-manager
      objects:
        - name: letsencrypt-prod
          kind: ClusterIssuer
        - name: letsencrypt-staging
          kind: ClusterIssuer
      <<: *s3_env

jobs:

  - name: calico
    plan:
      - put: calico
      - get: node-list
        params:
          wait: true
          wait_for: '.status.conditions[?(@.type=="Ready")].status'
      - put: node-list
        params:
          command: annotate
          command_args: "--overwrite --all node-status.spieg.org/calico-ready=((cluster_version))"

  - name: remove-master-taints
    plan:
      - in_parallel:
          - get: node-list
            trigger: true
            passed:
              - calico
          - get: pipelines
          - get: config
      - try:
          task: remove-master-taints
          file: pipelines/tasks/kubectl-cmd/task.yml
          params:
            COMMAND: taint
            ARGS: nodes --all node-role.kubernetes.io/master:NoSchedule-
      - put: node-list
        params:
          command: annotate
          command_args: "--overwrite --all node-status.spieg.org/master-taint-removed=((cluster_version))"

  - name: metrics-server
    plan:
      - in_parallel:
          - get: node-list
            passed:
              - remove-master-taints
      - put: metrics-server
        params:
          wait: true

  - name: metallb
    plan:
      - in_parallel:
          - get: node-list
            passed:
              - remove-master-taints
          - get: metallb-configmap-template
            trigger: true
          - put: metallb-system-namespace
      - in_parallel:
          - put: metallb-configmap
            params:
              file: metallb-configmap-template/metallb-configmap.yaml
          - put: metallb
      - get: memberlist-secret
        on_failure:
          do:
            - task: generate-memberlist-key
              config:
                platform: linux
                image_resource:
                  type: docker-image
                  source:
                    repository: frapsoft/openssl
                    tag: latest
                outputs:
                  - name: memberlist-key
                run:
                  path: /bin/ash
                  args:
                    - -c
                    - |
                      if [[ $DEBUG == "true" ]]; then
                        set -x
                      fi
                      openssl rand -base64 128 > memberlist-key/key
            - put: memberlist-secret
              params:
                command_args: secret generic -n metallb-system memberlist --from-file=secretkey=memberlist-key/key

  - name: powerflex-sdc-init
    plan:
      - in_parallel:
          - get: node-list
            passed:
              - remove-master-taints
          - get: registry-secret-template
            trigger: true
          - get: powerflex-sdc-init-repo
            trigger: true
          - get: powerflex-sdc-init-values
            trigger: true
      - get: powerflex-system-namespace
        on_failure:
          put: powerflex-system-namespace
          params:
            command_args: namespace powerflex-system
      - put: powerflex-registry-secret
        params:
          file: registry-secret-template/registry-secret.yaml
      - put: powerflex-sdc-init-release
        params:
          chart: powerflex-sdc-init-repo/helm/powerflex-sdc-init
          values: powerflex-sdc-init-values/powerflex-sdc-init-values.yaml
          check_is_ready: true

  - name: csi-powerflex
    plan:
      - in_parallel:
          - get: powerflex-sdc-init-release
            trigger: true
            passed:
              - powerflex-sdc-init
          - get: powerflex-secret-template
            trigger: true
          - get: csi-powerflex-repo
            trigger: true
          - get: csi-powerflex-values
            trigger: true
          - put: csi-snapshotclass-crd
          - put: csi-snapshotcontent-crd
          - put: csi-snapshot-crd
      - put: powerflex-secret
        params:
          file: powerflex-secret-template/powerflex-secret.yaml
      - put: csi-powerflex-release
        params:
          chart: csi-powerflex-repo/helm/csi-powerflex
          values: csi-powerflex-values/csi-powerflex-values.yaml
          check_is_ready: true

  - name: cert-manager
    plan:
      - in_parallel:
        - get: metallb
          trigger: true
          passed:
            - metallb
        - get: letsencrypt-issuers-template
          trigger: true
        - get: cert-manager-crds
          on_failure:
            put: cert-manager-crds
      - put: cert-manager-release
        params:
          chart: jetstack/cert-manager
          create_namespace: true
          version: v0.16.1
          check_is_ready: true
      - put: letsencrypt-issuers
        params:
          file: letsencrypt-issuers-template/letsencrypt-issuers.yaml

  - name: traefik
    plan:
      - in_parallel:
          - get: metallb
            trigger: true
            passed:
              - metallb
          - get: csi-powerflex-release
            passed:
              - csi-powerflex
          - get: cert-manager-release
            passed:
              - cert-manager
          - get: traefik-values
            trigger: true
      - put: traefik-release
        params:
          chart: stable/traefik
          values: traefik-values/traefik-values.yaml
          check_is_ready: true
          create_namespace: true