---
s3_env: &s3_env
  bucket: concourse
  endpoint: ((s3.endpoint))
  access_key_id: ((s3.access_key))
  secret_access_key: ((s3.secret_key))

helm_env: &helm_env
  cluster_url: ((cluster_url))
  cluster_ca: ((cluster_ca))
  admin_key: ((admin_key))
  admin_cert: ((admin_cert))

resource_types:
  - name: helm-release
    type: docker-image
    source:
      repository: spiegela/concourse-helm3
      tag: latest

resources:
  - name: pipelines
    type: git
    source:
      uri: git@github.com:spiegela/spieg-pipelines.git
      branch: master
      private_key: ((private_key))

  - name: config
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/config
      <<: *s3_env

  - name: node-list
    type: s3
    source:
      versioned_file: ClusterAPI/jonquil/node-list
      <<: *s3_env

  - name: metallb-pod-list
    type: s3
    source:
      versioned_file: ClusterAPI/jonquil/metallb-pod-list
      <<: *s3_env

  - name: metallb-configmap
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/metallb-configmap.yaml
      <<: *s3_env

  - name: powerflex-secret
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/powerflex-secret.yaml
      <<: *s3_env

  - name: registry-secret
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/registry-secret.yaml
      <<: *s3_env

  - name: powerflex-sdc-init-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/powerflex-sdc-init-values.yaml
      <<: *s3_env

  - name: powerflex-sdc-init-repo
    type: git
    source:
      uri: git@github.com:spiegela/powerflex-sdc-init.git
      branch: master
      private_key: ((private_key))

  - name: csi-powerflex-repo
    type: git
    source:
      uri: git@github.com:spiegela/csi-powerflex.git
      branch: master
      private_key: ((private_key))

  - name: csi-powerflex-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/csi-powerflex-values.yaml
      <<: *s3_env

  - name: powerflex-sdc-init-release
    type: helm-release
    source:
      release: sdc-init
      namespace: powerflex-system
      <<: *helm_env

  - name: csi-powerflex-release
    type: helm-release
    source:
      release: csi
      namespace: powerflex-system
      <<: *helm_env

  - name: traefik-values
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/traefik-values.yaml
      <<: *s3_env

  - name: traefik-release
    type: helm-release
    source:
      release: traefik
      namespace: traefik-system
      <<: *helm_env

  - name: cert-manager-release
    type: helm-release
    source:
      release: cert-manager
      namespace: cert-manager-system
      repos:
        - name: jetstack
          url: https://charts.jetstack.io
      <<: *helm_env

  - name: letsencrypt-issuers
    type: s3
    source:
      versioned_file: ClusterAPI/((cluster_name))/letsencrypt-issuers.yaml
      <<: *s3_env

jobs:

  - name: calico
    plan:
      - in_parallel:
          - get: pipelines
          - get: config
            trigger: true
      - task: calico
        file: pipelines/tasks/kubectl-apply-template/task.yml
        params:
          TEMPLATE: https://docs.projectcalico.org/manifests/calico.yaml
      - task: wait-until-nodes-ready
        file: pipelines/tasks/wait-until-ready/task.yml
        params:
          KIND: node
          DESIRED: '{.items[*].status.conditions[*].status}'
          READY: '{.items[*].status.conditions[?(@.status=="True")].status}'
          SUM: wc -c
      - task: list-nodes
        file: pipelines/tasks/kubectl-cmd/task.yml
        output_mapping:
          output: node-list
        params:
          COMMAND: get
          ARGS: node -o wide
      - put: node-list
        params:
          file: node-list/kubectl-cmd.out

  - name: remove-master-taints
    plan:
      - in_parallel:
          - get: node-list
            trigger: true
            passed:
              - calico
          - get: pipelines
          - get: config
      - try:
          task: remove-master-taints
          file: pipelines/tasks/kubectl-cmd/task.yml
          params:
            COMMAND: taint
            ARGS: nodes --all node-role.kubernetes.io/master:NoSchedule-
      - task: list-nodes
        file: pipelines/tasks/kubectl-cmd/task.yml
        output_mapping:
          output: node-list
        params:
          COMMAND: get
          ARGS: node -o wide
      - put: node-list
        params:
          file: node-list/kubectl-cmd.out

  - name: metrics-server
    plan:
      - in_parallel:
          - get: pipelines
          - get: node-list
            passed:
              - remove-master-taints
          - get: config
      - task: apply-metrics-server
        file: pipelines/tasks/kubectl-apply-template/task.yml
        params:
          TEMPLATE: https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml

  - name: metallb
    plan:
      - in_parallel:
          - get: node-list
            trigger: true
            passed:
              - remove-master-taints
          - get: pipelines
          - get: config
          - get: metallb-configmap
            trigger: true
          - task: generate-memberlist-key
            config:
              platform: linux
              image_resource:
                type: docker-image
                source:
                  repository: frapsoft/openssl
                  tag: latest
              outputs:
                - name: memberlist-key
              run:
                path: /bin/ash
                args:
                  - -c
                  - |
                    if [[ $DEBUG == "true" ]]; then
                      set -x
                    fi
                    openssl rand -base64 128 > memberlist-key/key
      - task: create-namespace
        file: pipelines/tasks/kubectl-apply-template/task.yml
        params:
          TEMPLATE: https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
      - in_parallel:
          - task: apply-configmap
            file: pipelines/tasks/kubectl-apply-template/task.yml
            input_mapping:
              templates: metallb-configmap
            params:
              TEMPLATE: templates/metallb-configmap.yaml
          - task: apply-metallb-system
            file: pipelines/tasks/kubectl-apply-template/task.yml
            params:
              TEMPLATE: https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
          - task: memberlist-secret-exists
            file: pipelines/tasks/skip-if-k8s-resource-exists/task.yml
            params:
              ARGS: -n metallb-system secret memberlist
            output_mapping:
              output: memberlist-exists
      - task: create-memberlist-secret
        file: pipelines/tasks/kubectl-cmd/task.yml
        input_mapping:
          conditions: memberlist-exists
          files: memberlist-key
        params:
          COMMAND: create
          ARGS: secret generic -n metallb-system memberlist --from-file=secretkey=files/key
      - task: list-pods
        file: pipelines/tasks/kubectl-cmd/task.yml
        output_mapping:
          output: metallb-pod-list
        params:
          COMMAND: get
          ARGS: -n metallb-system pod -o wide
      - put: metallb-pod-list
        params:
          file: metallb-pod-list/kubectl-cmd.out

  - name: powerflex-sdc-init
    plan:
      - in_parallel:
          - get: node-list
            trigger: true
            passed:
              - remove-master-taints
          - get: pipelines
          - get: registry-secret
            trigger: true
          - get: powerflex-sdc-init-repo
            trigger: true
          - get: powerflex-sdc-init-values
            trigger: true
          - get: config
            trigger: true
      - task: apply-registry-secret
        file: pipelines/tasks/kubectl-apply-template/task.yml
        input_mapping:
          templates: registry-secret
        params:
          NAMESPACE: powerflex-system
          TEMPLATE: templates/registry-secret.yaml
      - put: powerflex-sdc-init-release
        params:
          chart: powerflex-sdc-init-repo/helm/powerflex-sdc-init
          values: powerflex-sdc-init-values/powerflex-sdc-init-values.yaml
          create_namespace: true
          check_is_ready: true

  - name: csi-powerflex
    plan:
      - in_parallel:
          - get: config
          - get: pipelines
          - get: powerflex-sdc-init-release
            trigger: true
            passed:
              - powerflex-sdc-init
          - get: powerflex-secret
            trigger: true
          - get: csi-powerflex-repo
            trigger: true
          - get: csi-powerflex-values
            trigger: true
      - in_parallel:
        - task: apply-powerflex-csi-secret
          file: pipelines/tasks/kubectl-apply-template/task.yml
          input_mapping:
            templates: powerflex-secret
          params:
            TEMPLATE: templates/powerflex-secret.yaml
        - task: apply-csi-snapshotclass-crd
          file: pipelines/tasks/kubectl-apply-template/task.yml
          params:
            TEMPLATE: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml
        - task: apply-csi-snapshotcontent-crd
          file: pipelines/tasks/kubectl-apply-template/task.yml
          params:
            TEMPLATE: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml
        - task: apply-csi-snapshot-crd
          file: pipelines/tasks/kubectl-apply-template/task.yml
          params:
            TEMPLATE: https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml
      - put: csi-powerflex-release
        params:
          chart: csi-powerflex-repo/helm/csi-powerflex
          values: csi-powerflex-values/csi-powerflex-values.yaml
          check_is_ready: true

  - name: cert-manager
    plan:
      - in_parallel:
        - get: pipelines
        - get: metallb-pod-list
          trigger: true
          passed:
            - metallb
        - get: config
        - get: letsencrypt-issuers
          trigger: true
      - task: install-crds
        file: pipelines/tasks/kubectl-apply-template/task.yml
        params:
          TEMPLATE: https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.crds.yaml
      - put: cert-manager-release
        params:
          chart: jetstack/cert-manager
          create_namespace: true
          version: v0.16.1
          check_is_ready: true
      - task: create-issuers
        file: pipelines/tasks/kubectl-apply-template/task.yml
        input_mapping:
          templates: letsencrypt-issuers
        params:
          TEMPLATE: templates/letsencrypt-issuers.yaml

  - name: traefik
    plan:
      - in_parallel:
          - get: metallb-pod-list
            trigger: true
            passed:
              - metallb
          - get: csi-powerflex-release
            passed:
              - csi-powerflex
          - get: cert-manager-release
            passed:
              - cert-manager
          - get: traefik-values
            trigger: true
      - put: traefik-release
        params:
          chart: stable/traefik
          values: traefik-values/traefik-values.yaml
          check_is_ready: true
          create_namespace: true

