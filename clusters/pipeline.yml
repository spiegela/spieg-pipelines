---
govc_env: &govc_env
  GOVC_INSECURE: "true"
  GOVC_URL: https://((vsphere.server))/sdk
  GOVC_USERNAME: ((vsphere.user))
  GOVC_PASSWORD: ((vsphere.password))
  GOVC_DATACENTER: Datacenter
  GOVC_DATASTORE: Datastore 1
  GOVC_NETWORK: VM Network
  GOVC_RESOURCE_POOL: ClusterAPI
  DEBUG: "false"

s3_env: &s3_env
  bucket: concourse
  endpoint: ((s3.endpoint))
  access_key_id: ((s3.access_key))
  secret_access_key: ((s3.secret_key))

vsphere_env: &vsphere_env
  VSPHERE_USERNAME: ((vsphere.user))
  VSPHERE_PASSWORD: ((vsphere.password))
  VSPHERE_DATACENTER: Datacenter
  VSPHERE_DATASTORE: Datastore 1
  VSPHERE_NETWORK: VM Network
  VSPHERE_SERVER: ((vsphere.server))
  VSPHERE_SSH_AUTHORIZED_KEY: ((ssh_authorized_key))
  VSPHERE_RESOURCE_POOL: ClusterAPI
  VSPHERE_FOLDER: ClusterAPI
  EXP_CLUSTER_RESOURCE_SET: "true"

resource_types:
  - name: kubernetes-object
    type: docker-image
    source:
        repository: spiegela/concourse-kubernetes
        tag: latest

resources:
  - name: pipelines
    type: git
    icon: concourse-ci
    source:
      uri: git@github.com:spiegela/spieg-pipelines.git
      branch: master
      private_key: ((private_key))

  - name: credentials
    type: s3
    icon: file-key-outline
    source:
      versioned_file: ClusterAPI/credentials.yaml
      <<: *s3_env

  - name: capi-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/kind/config
      <<: *s3_env

  - name: capi-version
    type: semver
    icon: surround-sound-2-0
    source:
      key: ClusterAPI/kind/version
      <<: *s3_env

  - name: kube-template-info-v1.18.x
    type: s3
    icon: file-code-outline
    source:
      versioned_file: ClusterAPI/assets/capv/kube/capv-template-info-v1.18.x.json
      <<: *s3_env

  - name: kube-template-info-v1.19.x
    type: s3
    icon: file-code-outline
    source:
      versioned_file: ClusterAPI/assets/capv/kube/capv-template-info-v1.19.x.json
      <<: *s3_env

  - name: clusterctl-release
    type: github-release
    icon: chevron-right-box-outline
    source:
      access_token: ((git_token))
      owner: kubernetes-sigs
      repository: cluster-api
      private_key: ((private_key))

  - name: gamboge-cluster-yaml
    type: s3
    icon: code-json
    source:
      versioned_file: ClusterAPI/gamboge/cluster.yaml
      <<: *s3_env

  - name: jonquil-cluster-yaml
    type: s3
    icon: code-json
    source:
      versioned_file: ClusterAPI/jonquil/cluster.yaml
      <<: *s3_env

  - name: jonquil-cluster
    type: kubernetes-object
    icon: kubernetes
    source:
      kubeconfig: ((capi-config))
      objects:
        - name: jonquil
          kind: Cluster

  - name: gamboge-cluster
    type: kubernetes-object
    icon: kubernetes
    source:
      kubeconfig: ((capi-config))
      objects:
        - name: gamboge
          kind: Cluster

  - name: jonquil-kubeconfig-secret
    type: kubernetes-object
    icon: key
    source:
      kubeconfig: ((capi-config))
      objects:
        - name: jonquil-kubeconfig
          kind: Secret

  - name: gamboge-kubeconfig-secret
    type: kubernetes-object
    icon: key
    source:
      kubeconfig: ((capi-config))
      objects:
        - name: gamboge-kubeconfig
          kind: Secret

  - name: gamboge-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/gamboge/config
      <<: *s3_env

  - name: jonquil-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/jonquil/config
      <<: *s3_env

  - name: base-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/base-kubeconfig.yaml
      <<: *s3_env

  - name: emc-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/emc-kubeconfig.yaml
      <<: *s3_env

  - name: merged-config
    type: s3
    icon: key-variant
    source:
      versioned_file: ClusterAPI/all/config
      <<: *s3_env

  - name: gamboge-version
    type: semver
    icon: surround-sound-2-0
    source:
      key: ClusterAPI/gamboge/version
      <<: *s3_env

  - name: jonquil-version
    type: semver
    icon: surround-sound-2-0
    source:
      key: ClusterAPI/jonquil/version
      <<: *s3_env

jobs:

  - name: load-config-vars
    plan:
      - in_parallel:
          - get: pipelines
          - get: credentials
          - get: capi-config
            trigger: true
      - load_var: loaded-capi-config
        file: capi-config/config
      - set_pipeline: self
        file: pipelines/clusters/pipeline.yml
        vars:
          capi-config: ((.:loaded-capi-config))
        var_files:
          - credentials/credentials.yaml

  - name: gamboge-cluster-yaml
    plan:
      - in_parallel:
          - get: capi-version
            trigger: true
          - get: pipelines
            trigger: true
          - get: kube-template-info-v1.19.x
            trigger: true
          - get: capi-config
            trigger: true
          - get: clusterctl-release
            trigger: true
      - task: generate-cluster-yaml
        file: pipelines/tasks/vsphere-cluster-config/task.yml
        input_mapping:
          clusterctl: clusterctl-release
          config: capi-config
        params:
          <<: *vsphere_env
          GITHUB_TOKEN: ((git_token))
          CLUSTER_NAME: gamboge
          VSPHERE_TEMPLATE: centos-7-kube-v1.19.1
          CONTROL_PLANE_ENDPOINT_IP: 192.168.77.60
          CONTROL_PLANE_MACHINE_COUNT: 3
          WORKER_MACHINE_COUNT: 1
          KUBERNETES_VERSION: 1.19.1
          NAMESPACE: default
          TEMPLATE_MEMORY: 32768
          TEMPLATE_DISK: 64
          TEMPLATE_CPU: 12
          TEMPLATE_SECONDARY_NETWORK: Storage Access
          CLUSTER_CIDR: 172.16.0.0/16
      - put: gamboge-cluster-yaml
        params:
          file: cluster/cluster.yaml

  - name: jonquil-cluster-yaml
    plan:
      - in_parallel:
          - get: capi-version
            trigger: true
          - get: pipelines
            trigger: true
          - get: kube-template-info-v1.18.x
            trigger: true
          - get: capi-config
            trigger: true
          - get: clusterctl-release
            trigger: true
      - task: generate-cluster-yaml
        file: pipelines/tasks/vsphere-cluster-config/task.yml
        input_mapping:
          clusterctl: clusterctl-release
          config: capi-config
        params:
          <<: *vsphere_env
          GITHUB_TOKEN: ((git_token))
          CLUSTER_NAME: jonquil
          VSPHERE_TEMPLATE: centos-7-kube-v1.18.2
          CONTROL_PLANE_ENDPOINT_IP: 192.168.77.180
          CONTROL_PLANE_MACHINE_COUNT: 3
          WORKER_MACHINE_COUNT: 1
          KUBERNETES_VERSION: 1.18.2
          NAMESPACE: default
          TEMPLATE_MEMORY: 32768
          TEMPLATE_DISK: 64
          TEMPLATE_CPU: 12
          TEMPLATE_SECONDARY_NETWORK: Storage Access
          CLUSTER_CIDR: 172.17.0.0/16
      - put: jonquil-cluster-yaml
        params:
          file: cluster/cluster.yaml

  - name: gamboge-cluster
    serial_groups:
      - cluster-creation
    plan:
      - in_parallel:
          - get: pipelines
          - get: clusterctl-release
          - get: capi-config
          - get: gamboge-cluster-yaml
            trigger: true
            passed:
              - gamboge-cluster-yaml
      - put: gamboge-cluster
        params:
          file: gamboge-cluster-yaml/cluster.yaml
        get_params:
          wait: true
          wait_for: '{.status.conditions[*].status}'
          timeout: 1500 # 25 minutes
      - get: gamboge-kubeconfig-secret
        params:
          output: jsonpath='{.data.value}'
          output_file: config.base64
      - task: decode-secret
        file: pipelines/tasks/base64/task.yml
        output_mapping:
          out: kubeconfig
        input_mapping:
          in: gamboge-kubeconfig-secret
        params:
          IN: config.base64
          OUT: config
      - get: gamboge-version
        params:
          bump: patch
          file: version
      - load_var: gamboge-kubeconfig-loaded
        file: kubeconfig/config
      - load_var: gamboge-version
        file: gamboge-version/version
      - set_pipeline: gamboge-bootstrap
        file: pipelines/cluster-bootstrap/pipeline.yml
        vars:
          kubeconfig: ((.:gamboge-kubeconfig-loaded))
          cluster_name: gamboge
          csi_branch: v0.1.2
          cluster_version: ((.:gamboge-version))
          s3: ((s3))
          git_token: ((git_token))
          private_key: ((private_key))
          docker_credentials: ((docker_credentials))
      - put: gamboge-version
        params:
          bump: patch
      - put: gamboge-config
        params:
          file: kubeconfig/config

  - name: jonquil-cluster
    serial_groups:
      - cluster-creation
    plan:
      - in_parallel:
          - get: pipelines
          - get: clusterctl-release
          - get: jonquil-cluster-yaml
            trigger: true
            passed:
              - jonquil-cluster-yaml
      - put: jonquil-cluster
        params:
          file: jonquil-cluster-yaml/cluster.yaml
        get_params:
          wait: true
          wait_for: '{.status.conditions[*].status}'
          timeout: 1500 # 25 minutes
      - get: jonquil-kubeconfig-secret
        params:
          output: jsonpath='{.data.value}'
          output_file: config.base64
      - task: decode-secret
        file: pipelines/tasks/base64/task.yml
        output_mapping:
          out: kubeconfig
        input_mapping:
          in: jonquil-kubeconfig-secret
        params:
          IN: config.base64
          OUT: config
      - get: jonquil-version
        params:
          bump: patch
          file: version
      - load_var: jonquil-kubeconfig-loaded
        file: kubeconfig/config
      - load_var: jonquil-version
        file: jonquil-version/version
      - set_pipeline: jonquil-bootstrap
        file: pipelines/cluster-bootstrap/pipeline.yml
        vars:
          kubeconfig: ((.:jonquil-kubeconfig-loaded))
          cluster_name: jonquil
          csi_branch: v0.1.2
          cluster_version: ((.:jonquil-version))
          s3: ((s3))
          git_token: ((git_token))
          private_key: ((private_key))
          docker_credentials: ((docker_credentials))
      - put: jonquil-version
        params:
          bump: patch
      - put: jonquil-config
        params:
          file: kubeconfig/config

  - name: merge-configs
    plan:
      - in_parallel:
          - get: base-config
            trigger: true
          - get: emc-config
            trigger: true
          - get: capi-config
            trigger: true
          - get: jonquil-config
            trigger: true
            passed:
              - jonquil-cluster
          - get: gamboge-config
            trigger: true
            passed:
              - gamboge-cluster
      - task: merge-configs
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: bitnami/kubectl
              tag: 1.19.1
          inputs:
            - name: base-config
            - name: emc-config
            - name: capi-config
            - name: jonquil-config
            - name: gamboge-config
          outputs:
            - name: merged
          run:
            path: /bin/bash
            args:
              - -c
              - |
                KUBECONFIG=base-config/base-kubeconfig.yaml:emc-config/emc-kubeconfig.yaml:capi-config/config:jonquil-config/config:gamboge-config/config kubectl config view --merge --flatten > \
                  merged/config
      - put: merged-config
        params:
          file: merged/config