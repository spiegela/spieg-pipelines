---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: mikefarah/yq
    tag: latest

inputs:
  - name: kubeconfig

outputs:
  - name: vars

params:
  CONFIG: kubeconfig/config
  DEBUG:
  CONTEXT:

run:
  path: /bin/ash
  args:
    - -c
    - |
      if [[ "${DEBUG}" == "true" ]]; then
        set -x
      fi

      if [[ "${CONTEXT}" == "" ]]; then
        export CONTEXT=$(yq r "${CONFIG}" 'current-context')
      fi
      echo "Selected context: ${CONTEXT}"

      export CLUSTER=$(yq r "${CONFIG}" "contexts[name==$CONTEXT].context.cluster")
      echo "  Cluster: ${CLUSTER}"
      export K_USER=$(yq r "${CONFIG}" "contexts[name==$CONTEXT].context.user")
      echo "  User: ${K_USER}"
      export NAMESPACE=$(yq r "${CONFIG}" "contexts[name==$CONTEXT].context.namespace")
      echo "  Namespace: ${NAMESPACE}"
      echo ""

      cat >vars/kube-vars.yml  <<EOL
      cluster_url: $(yq r "${CONFIG}" "clusters[name==$CLUSTER].cluster.server")
      cluster_ca: $(yq r "${CONFIG}" "clusters[name==$CLUSTER].cluster.certificate-authority-data")
      admin_key: $(yq r "${CONFIG}" "users[name==$K_USER].user.client-key-data")
      admin_cert: $(yq r "${CONFIG}" "users[name==$K_USER].user.client-certificate-data")
      EOL

      if [[ "${NAMESPACE}" == "" ]]; then
        echo "namespace: ${NAMESPACE}" >> vars/kube-vars.yml
      fi

      echo "Resulting vars:"
      echo ""
      cat vars/kube-vars.yml