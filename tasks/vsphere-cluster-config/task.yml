---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: mikefarah/yq
    tag: latest

inputs:
  - name: clusterctl
  - name: config

outputs:
  - name: cluster

params:
  KUBECONFIG: config/config
  NAMESPACE: default
  GITHUB_TOKEN:
  VSPHERE_PASSWORD:
  CLUSTER_NAME:
  CONTROL_PLANE_MACHINE_COUNT:
  WORKER_MACHINE_COUNT:
  KUBERNETES_VERSION:
  VSPHERE_DATACENTER:
  VSPHERE_DATASTORE:
  VSPHERE_FOLDER:
  VSPHERE_HAPROXY_TEMPLATE:
  VSPHERE_NETWORK:
  VSPHERE_RESOURCE_POOL:
  VSPHERE_SERVER:
  VSPHERE_SSH_AUTHORIZED_KEY:
  VSPHERE_TEMPLATE:
  TEMPLATE_MEMORY:
  TEMPLATE_DISK:
  TEMPLATE_CPU:
  TEMPLATE_SECONDARY_NETWORK:
  CLUSTER_CIDR:
run:
  path: /bin/ash
  args:
    - -c
    - |
      set -e
      set -x

      mkdir -p /root/.cluster-api
      chmod +x clusterctl/clusterctl-linux-amd64
      clusterctl/clusterctl-linux-amd64 config cluster "${CLUSTER_NAME}" > cluster/cluster.yaml

      # Replace existing CIDR block with new
      cat >cluster_template_patch.yaml  <<EOL
      spec:
        clusterNetwork:
          pods:
            cidrBlocks:
              - ${CLUSTER_CIDR}
      EOL
      yq merge -d0 -i -x cluster/cluster.yaml cluster_template_patch.yaml

      # Set VM template resoruces & append new interface to network devices
      cat >mt_template_patch.yaml <<EOL
      spec:
        template:
          spec:
            memoryMiB: ${TEMPLATE_MEMORY}
            numCPUs: ${TEMPLATE_CPU}
            diskGiB: ${TEMPLATE_DISK}
            network:
              devices:
                - dhcp4: true
                  networkName: ${TEMPLATE_SECONDARY_NETWORK}
      EOL
      yq merge -d2 -i -x -a cluster/cluster.yaml mt_template_patch.yaml

      # Enable cluster feature gates
      cat >controlplane_gates_patch.yaml <<EOL
      spec:
        kubeadmConfigSpec:
          clusterConfiguration:
            apiServer:
              extraArgs:
                feature-gates: VolumeSnapshotDataSource=true,EvenPodsSpread=true
            controllerManager:
              extraArgs:
                feature-gates: VolumeSnapshotDataSource=true,EvenPodsSpread=true
            scheduler:
              extraArgs:
                feature-gates: VolumeSnapshotDataSource=true,EvenPodsSpread=true
          initConfiguration:
            nodeRegistration:
              kubeletExtraArgs:
                feature-gates: VolumeSnapshotDataSource=true,EvenPodsSpread=true
          useExperimentalRetryJoin: true
      EOL
      yq merge -d3 -i -x -a cluster/cluster.yaml controlplane_gates_patch.yaml

      # Enable cluster feature gates
      cat >kubeadm_gates_patch.yaml <<EOL
      spec:
        template:
          spec:
            joinConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  feature-gates: VolumeSnapshotDataSource=true,EvenPodsSpread=true
      EOL
      yq merge -d4 -i -x -a cluster/cluster.yaml kubeadm_gates_patch.yaml

      echo "Printing cluster configuration YAML"
      echo
      cat cluster/cluster.yaml