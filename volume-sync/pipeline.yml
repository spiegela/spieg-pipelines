---
s3_env: &s3_env
  bucket: concourse
  endpoint: ((s3.endpoint))
  access_key_id: ((s3.access_key))
  secret_access_key: ((s3.secret_key))

resource_types:

  - name: kubernetes-object
    type: docker-image
    source:
      repository: spiegela/concourse-kubernetes
      tag: latest

resources:
  - name: pipelines
    type: git
    source:
      uri: git@github.com:spiegela/spieg-pipelines.git
      branch: master
      private_key: ((private_key))

  - name: credentials
    type: s3
    source:
      versioned_file: ClusterAPI/credentials.yaml
      <<: *s3_env

  - name: jonquil-config
    type: s3
    source:
      versioned_file: ClusterAPI/jonquil/config
      <<: *s3_env

  - name: gamboge-config
    type: s3
    source:
      versioned_file: ClusterAPI/gamboge/config
      <<: *s3_env

  - name: all-volumes
    type: s3
    source:
      versioned_file: ClusterAPI/all/volumes.tgz
      <<: *s3_env

  - name: gamboge-volumes
    type: kubernetes-object
    source:
      tracing_enabled: true
      list: PersistentVolume
      kubeconfig: ((gamboge_config))

  - name: jonquil-volumes
    type: kubernetes-object
    source:
      tracing_enabled: true
      list: PersistentVolume
      kubeconfig: ((jonquil_config))

  - name: mikado-volumes
    type: s3
    source:
      versioned_file: ClusterAPI/mikado/volumes.json
      <<: *s3_env

jobs:

  - name: load-config-vars
    plan:
      - in_parallel:
          - get: pipelines
          - get: credentials
          - do:
            - get: gamboge-config
            - load_var: loaded-gamboge-config
              file: gamboge-config/config
          - do:
            - get: jonquil-config
            - load_var: loaded-jonquil-config
              file: jonquil-config/config
      - set_pipeline: self
        file: pipelines/volume-sync/pipeline.yml
        vars:
          gamboge_config: ((.:loaded-gamboge-config))
          jonquil_config: ((.:loaded-jonquil-config))
        var_files:
          - credentials/credentials.yaml

  - name: merge-volume-lists
    plan:
      - in_parallel:
          - get: pipelines
          - get: mikado-volumes
          - get: gamboge-volumes
            params:
              output: json
              output_file: volumes.json
          - get: jonquil-volumes
            params:
              output: json
              output_file: volumes.json
      - task: merge-volume-lists
        file: pipelines/tasks/merge-volume-lists/task.yml
      - put: all-volumes
        params:
          file: output/all-volumes.tgz

  - name: apply-merged-volumes
    plan:
      - get: all-volumes
        trigger: true
        passed:
          - merge-volume-lists
      - task:
        config:
          platform: linux
          inputs:
            - name: all-volumes
          outputs:
            - name: all-volumes-json
          image_resource:
            type: docker-image
            source:
              repository: alpine
              tag: latest
          run:
            path: /bin/ash
            args:
              - -c
              - tar zxfvp all-volumes/volumes.tgz
      - put: jonquil-volumes
        params:
          file: all-volumes-json
        get_params:
          file: ""
      - put: gamboge-volumes
        params:
          file: all-volumes-json
        get_params:
          file: ""
